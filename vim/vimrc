set nocompatible              " be iMproved, required

" Plugins
" =============

" set the runtime path to include Vundle and initialize
filetype off                  " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
" # Theme
Plugin 'chriskempson/base16-vim'

Plugin 'joonty/vim-sauce'
Plugin 'scrooloose/nerdtree'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ervandew/supertab'
Plugin 'rking/ag.vim'
Plugin 'ctrlpvim/ctrlp.vim'

" Commenting out
Plugin 'scrooloose/nerdcommenter'
" Wie gehe ich mit Gist um?
" Plugin 'mattn/gist-vim'

" [],(), {}, <> Auto Sourrinding mapping, Try cs"'
Plugin 'tpope/vim-surround'

Plugin 'cakebaker/scss-syntax.vim'
"Plugin 'othree/html5.vim'
Plugin 'elzr/vim-json'
Plugin 'StanAngeloff/php.vim'

" Git Wrapper for Vim
"Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/syntastic'
"Plugin 'joonty/vdebug'

Plugin 'Raimondi/delimitMate'
"Plugin 'docunext/closetag.vim'
"Plugin 'terryma/vim-multiple-cursors'


" TEST
Plugin 'christoomey/vim-tmux-navigator'

Plugin 'majutsushi/tagbar'
Plugin 'vim-php/phpctags'
Plugin 'vim-php/tagbar-phpctags.vim'
Plugin 'junegunn/goyo.vim'

"Plugin 'Yggdroot/indentLine'
"Plugin 'jlanzarotta/bufexplorer'
"Plugin 'chrisbra/csv.vim'

call vundle#end()            " required
filetype plugin indent on    " required



" That bell is the worst sound. Shut it the fuck off.
set visualbell

" General Config
" ==============

"let mapleader="\<space>"        " I just use the default Leader
let mapleader="\<space>"
nmap <leader><leader> :noh<cr>
set showcmd                     " Show incomplete cmds down the bottom
set gcr=a:blinkon0              " Disable cursor blink
set laststatus=2                " Always show status line
set splitright                  " Opens vertical split right of current window
set splitbelow                  " Opens horizontal split below current window
set shortmess=filnxtToOI        " see :help shortmess

" Set relevant filetypes
au BufRead,BufNewFile *.md set filetype=markdown

" Appearance
" ==========

" "Syntax highlighting should be in 256 colors
syntax on
syntax enable
set t_Co=256
" Limit line-length to 80 columns by highlighting col 81
if exists("+colorcolumn")
    set colorcolumn=121
endif
" Highlight current line
set cursorline
" Show current line and column position in file
set ruler
" Show file title in terminal tab
set title

" Use base-16 for the color scheme, different themes in GUI and terminal
if has('gui_macvim')
    colorscheme base16-ocean
    set background=dark
    set guifont=Sauce\ Code\ Powerline:h14
elseif has('gui_running')
    colorscheme base16-ocean
    set background=dark
    set guifont=Sauce\ Code\ Powerline\ Medium:h14
else
    let base16colorspace=256  " Access colors present in 256 colorspace
    colorscheme base16-ocean
    set background=dark
endif

" Sanity Config (Don't edit text like an animal)
" ==============================================

set nocompatible                " Use vim rather than vi settings
"set encoding=utf-8              " standard encoding
set relativenumber             " prefer absolute #
set backspace=indent,eol,start  " Allow backspace in insert mode
set listchars=space:·,nbsp:·,trail:·,precedes:«,extends:»,tab:▸·,eol:¬
:set list
set autoread                    " Reload files changed outside vim
set hidden                      " Buffers can exist in the background
set history=1000                " Store lots of :cmdline history (its not 1990)
" Allow motions and back-spacing over line-endings etc
set whichwrap=h,l,b,<,>,~,[,]

"Don't dump distracting text to terminal during searches!
set shellpipe=2>/dev/null>
"set re=1                        "Use a non-broken regex engine for syntax highlighting

set tags+=tagr
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar

" INTERACTIONS

" Start scrolling slightly before the cursor reaches an edge
set scrolloff=3
set sidescrolloff=5
set sidescroll=1


set autoread " Make Vim automatically open changed files (e.g. changed after a Git commit)
set iskeyword+=- "Makes foo-bar considered one wordi
set iskeyword+=$

" Indentation and Display
" =======================

" We want to replace tabs with spaces and have 4 space width indentation
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
set shiftround

set number
set breakindent " Make word wrapping behave like it does in every other sane text editor
set wrap linebreak

" Turn Off Swap Files
" ===================

set noswapfile
set nobackup
set nowritebackup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" Persistent Undo
" ===============

" Keep undo history across sessions, by storing in file
" Only works in MacVim (gui) mode
if has('gui_running')
    set undodir=~/.vim/backups
    set undofile
endif

" Use the system clipboard
set clipboard=unnamed
" Change the cursor shape while in insert-mode
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Remove the delay when escaping from insert-mode
set timeoutlen=1000 ttimeoutlen=0

" Enable mouse support
set mouse=a
set ttyfast
" set ttymouse=xterm2

" USE THE SYSTEM CLIPBOARD

" Scrolling
" =========

" Search Settings
" ===============

set incsearch        " Find the next match as we type the search
set hlsearch         " Highlight searches by default
set viminfo='100,f1  " Save up to 100 marks, enable capital marks
set nohlsearch       " Don’t keep results highlighted after searching
set incsearch        " ...just highlight as we type
set ignorecase       " Ignore case when searching...
set smartcase        " ...except if we input a capital letter

" Folds
" =====
set foldmethod=indent   " Fold based on indent
set foldnestmax=3       " Deepest fold is 3 levels
set nofoldenable        " Don't fold by default

" Wie?
"nnoremap <space> za
"vnoremap <space> zf

" Plugin Options
" ==============
" Airline options
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme="base16_ocean"
set linespace=5
set noshowmode " Le  airline handle the mode display


let g:indentLine_char = '┆'
let g:indentLine_enabled = 1

let g:ctrlp_working_path_mode = 0
" The Silver Searcher
if executable('ag')
    " Use ag over grep
    set grepprg=ag\ --nogroup\ --nocolor

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

    " ag is fast enough that CtrlP doesn't need to cache
    let g:ctrlp_use_caching = 0
endif

let g:sauce_path = '~/workspace/vimsauce'

" Custom commands
" ===============

map <leader>rr :source ~/.vimrc<CR>

"noremap <Up> <NOP>
"noremap <Down> <NOP>
"noremap <Left> <NOP>
"noremap <Right> <NOP>

